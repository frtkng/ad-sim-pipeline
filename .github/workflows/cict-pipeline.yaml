name: ♾️ CICT Pipeline

on:
  workflow_dispatch:        # 手動トリガのみ

permissions:
  id-token: write           # OIDC トークン発行
  contents: read

env:                        # 共通定数
  AWS_REGION:   ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT:  ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_URI:      ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  IMAGE_REPO:   e2e-ai-carla-dev            # ECR のリポジトリ名

jobs:
# ───────────────────────── Build & Push ─────────────────────────
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}    # 後工程へ渡す

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region:     ${{ env.AWS_REGION }}

    - name: Login to ECR
      run: |
        aws ecr get-login-password --region "$AWS_REGION" \
          | docker login --username AWS --password-stdin "$ECR_URI"

    - name: Set build tag
      id: meta
      run: |
        echo "tag=roach-${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
        echo "TAG=roach-${GITHUB_SHA}"  >> "$GITHUB_ENV"

    - name: Build & Push image
      run: |
        docker build -t "$ECR_URI/$IMAGE_REPO:$TAG" -f docker/roach/Dockerfile .
        docker push "$ECR_URI/$IMAGE_REPO:$TAG"

# ───────────────────── Deploy & Run on EKS ──────────────────────
  deploy-and-run:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      TAG: ${{ needs.build-and-push.outputs.tag }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region:     ${{ env.AWS_REGION }}

    - name: Setup kubectl for cluster
      run: |
        aws eks update-kubeconfig               \
          --name   "${{ secrets.CLUSTER_NAME }}" \
          --region "$AWS_REGION"                \
          --alias  ci-cluster                   \
          --role-arn "${{ secrets.AWS_ROLE_ARN }}"

    # ---------- Deployment 更新 ----------
    - name: Update roach Deployment image
      run: |
        kubectl set image deployment/roach-deployment \
          roach="$ECR_URI/$IMAGE_REPO:$TAG" -n default
        kubectl rollout status deployment/roach-deployment -n default

    # ---------- 再学習ジョブ ----------
    - name: Launch retrain Job
      env:
        IMAGE:        ${{ env.ECR_URI }}/${{ env.IMAGE_REPO }}:${{ env.TAG }}
        MODEL_BUCKET: ${{ secrets.MODEL_BUCKET }}
        JOB_NAME:     roach-retrain-${{ github.run_id }}
      run: |
        envsubst < k8s/roach-retrain-job.yaml | kubectl apply -f -

    - name: Wait for Job completion
      run: |
        kubectl wait --for=condition=complete "job/$JOB_NAME" \
          --timeout=600s

    - name: Fetch Job logs
      run: |
        kubectl logs "job/$JOB_NAME" --all-containers=true
