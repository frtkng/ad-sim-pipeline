name: ♾️ CICT Pipeline

on:
  workflow_dispatch:        # 手動トリガのみ

# GitHub → AWS OIDC で必要
permissions:
  id-token: write
  contents: read

env:                       # 共有環境変数（好みで）
  AWS_REGION: ap-northeast-1

jobs:
# ─────────────────────────────────────────────────────────────
# 1) Build & push Roach コンテナを ECR に登録
# ─────────────────────────────────────────────────────────────
  build-and-push:
    runs-on: ubuntu-latest

    outputs:               # 後段ジョブにイメージタグを渡す
      image-tag: ${{ steps.meta.outputs.tag }}

    steps:
      - uses: actions/checkout@v4

      # イメージタグを決定 (例: roach-{git-sha})
      - id: meta
        run: echo "tag=roach-${{ github.sha }}" >> "$GITHUB_OUTPUT"

      # OIDC で github-actions-role に Assume
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      # ECR ログイン（トークンを自動取得）
      - uses: aws-actions/amazon-ecr-login@v2

      # BuildKit でビルド & プッシュ（容量節約オプション付き）
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/roach/Dockerfile
          push: true
          provenance: false      # SBOM/Provenance を切ってサイズ削減
          sbom: false
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/e2e-ai-carla-dev:${{ steps.meta.outputs.tag }}

# ─────────────────────────────────────────────────────────────
# 2) 新イメージを EKS へデプロイし、Retrain Job をキック
# ─────────────────────────────────────────────────────────────
  deploy-and-run:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      # kubeconfig を生成（github-actions-role は aws-auth に system:masters 登録済み）
      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name    ${{ secrets.CLUSTER_NAME }} \
            --region  ${{ env.AWS_REGION }}

      # ----------- ここから kubectl 操作 -------------
      - name: Deploy & retrain
        env:
          ECR_URI:     ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          TAG:         ${{ needs.build-and-push.outputs.image-tag }}
          MODEL_BUCKET:${{ secrets.MODEL_BUCKET }}
        run: |
          IMAGE="$ECR_URI/e2e-ai-carla-dev:$TAG"
          export IMAGE MODEL_BUCKET

          # ★ 2 重 AssumeRole を防ぐため、STS 関連 env を外す
          unset AWS_ROLE_ARN AWS_WEB_IDENTITY_TOKEN_FILE AWS_ROLE_SESSION_NAME

          # Deployment のイメージ更新
          envsubst < k8s/roach-deployment.yaml | kubectl apply -f -

          # Retrain Job 起動
          envsubst < k8s/roach-retrain-job.yaml | kubectl apply -f -

          # Job 完了待ち（最大 15 分）
          kubectl wait --for=condition=complete job/roach-retrain --timeout=900s

          # Retrain ログ取得
          kubectl logs job/roach-retrain
