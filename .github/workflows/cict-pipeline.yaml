name: ♾️ CICT Pipeline

on:
  workflow_dispatch:        # 手動トリガのみ

permissions:
  id-token: write           # OIDC トークン発行
  contents: read

env:                        # 共通定数
  AWS_REGION:   ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT:  ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_URI:      ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  IMAGE_REPO:   e2e-ai-carla-dev            # ECR のリポジトリ名

jobs:
# ───────────────────────── Build & Push ─────────────────────────
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Buildx (BuildKit) を有効化
      - uses: docker/setup-buildx-action@v3

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password \
            | docker login --username AWS --password-stdin \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build & Push (stream)
        uses: docker/build-push-action@v5
        with:
          context: .
          file:   docker/roach/Dockerfile
          push:   true
          tags:   ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/e2e-ai-carla-dev:roach-${{ github.sha }}
          # 途中レイヤを Runner に残さない
          outputs: type=registry

# ───────────────────── Deploy & Run on EKS ──────────────────────
  deploy-and-run:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      TAG: ${{ needs.build-and-push.outputs.tag }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region:     ${{ env.AWS_REGION }}

    - name: Setup kubectl for cluster
      run: |
        aws eks update-kubeconfig               \
          --name   "${{ secrets.CLUSTER_NAME }}" \
          --region "$AWS_REGION"                \
          --alias  ci-cluster                   \
          --role-arn "${{ secrets.AWS_ROLE_ARN }}"

    # ---------- Deployment 更新 ----------
    - name: Update roach Deployment image
      run: |
        kubectl set image deployment/roach-deployment \
          roach="$ECR_URI/$IMAGE_REPO:$TAG" -n default
        kubectl rollout status deployment/roach-deployment -n default

    # ---------- 再学習ジョブ ----------
    - name: Launch retrain Job
      env:
        IMAGE:        ${{ env.ECR_URI }}/${{ env.IMAGE_REPO }}:${{ env.TAG }}
        MODEL_BUCKET: ${{ secrets.MODEL_BUCKET }}
        JOB_NAME:     roach-retrain-${{ github.run_id }}
      run: |
        envsubst < k8s/roach-retrain-job.yaml | kubectl apply -f -

    - name: Wait for Job completion
      run: |
        kubectl wait --for=condition=complete "job/$JOB_NAME" \
          --timeout=600s

    - name: Fetch Job logs
      run: |
        kubectl logs "job/$JOB_NAME" --all-containers=true
