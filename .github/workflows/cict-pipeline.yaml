name: ♾️CICT–Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write          # OIDC トークン取得
  contents: read

jobs:
  build-and-push:
    name: Build & Push Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password \
            | docker login --username AWS --password-stdin \
                ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build & Push
        run: |
          TAG=roach-${{ github.sha }}
          docker build \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/e2e-ai-carla-dev:$TAG \
            -f docker/roach/Dockerfile .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/e2e-ai-carla-dev:$TAG

      # もし infra も同時に管理するなら…
      - name: Terraform Apply
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve

  deploy-and-run:
    name: Deploy & Run Simulation
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup kubectl
        run: |
          aws eks update-kubeconfig \
            --name ${{ secrets.CLUSTER_NAME }}

      - name: Deploy Update to EKS
        run: |
          TAG=roach-${{ github.sha }}
          # Deployment のイメージを新しいものに書き換え
          kubectl set image deployment/roach-deployment \
            roach=$${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/e2e-ai-carla-dev:$TAG \
            --namespace default

      - name: Run Retraining Job
        run: |
          # Job マニフェストにイメージ & retrain フラグを埋め込んで実行
          envsubst < k8s/roach-retrain-job.yaml | kubectl apply -f -

      - name: Wait for Job Completion
        run: |
          kubectl wait --for=condition=complete job/roach-retrain \
            --timeout=600s

      - name: Fetch Logs
        run: |
          kubectl logs job/roach-retrain
